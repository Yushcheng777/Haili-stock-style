name: Scheduled backtests

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-backtests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Prepare timestamp
        id: ts
        run: echo "timestamp=$(date -u +%Y%m%dT%H%M%SZ)" >> $GITHUB_OUTPUT

      - name: Run backtests
        run: |
          TIMESTAMP=${{ steps.ts.outputs.timestamp }}
          mkdir -p results/$TIMESTAMP
          # Replace with your backtest entry script and args
          python -u scripts/run_all_backtests.py --out results/$TIMESTAMP || true

      - name: Commit results to results branch
        env:
          TIMESTAMP: ${{ steps.ts.outputs.timestamp }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -B results
          git add results/$TIMESTAMP
          git commit -m "Backtest results: $TIMESTAMP" || echo "No changes to commit"
          git push origin results --force

      - name: Upload backtest artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backtest-results-${{ steps.ts.outputs.timestamp }}
          path: results/${{ steps.ts.outputs.timestamp }}
          if-no-files-found: ignore
