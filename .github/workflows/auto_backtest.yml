name: Daily Haili Backtest

on:
  workflow_dispatch:
  schedule:
    # 每天北京时间16:30 (UTC 08:30)
    - cron: '30 8 * * *'

jobs:
  run-backtest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 运行策略生成CSV
        run: python haili_strategy.py

      - name: Run Haili Backtest
        run: python haili_backtest.py --input-csv strategy.csv

      - name: Generate Timestamp
        run: echo "TIMESTAMP=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_ENV

      - name: Generate backtest reports
        run: |
          TIMESTAMP=${{ env.TIMESTAMP }}
          mkdir -p backtest_results
          # Move CSV files to backtest_results directory for processing
          mv *.csv backtest_results/ || true
          # Generate reports
          python generate_backtest_report.py --input-dir backtest_results || echo "Report generation failed"

      - name: Commit Results to History Branch
        env:
          TIMESTAMP: ${{ env.TIMESTAMP }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch origin results || true
          git checkout -B results origin/results || git checkout -b results
          mkdir -p results/${TIMESTAMP}
          mv backtest_results/* results/${TIMESTAMP}/ || true
          mv *.csv results/${TIMESTAMP}/ || true
          git add results/
          git commit -m "Backtest results for ${TIMESTAMP}" || echo "No changes to commit"
          git push origin results

      - name: Upload CSV Results
        uses: actions/upload-artifact@v4
        with:
          name: backtest-results-${{ env.TIMESTAMP }}
          path: |
            results/${{ env.TIMESTAMP }}/
