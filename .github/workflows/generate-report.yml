name: Generate Backtest Report

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install core dependencies for report generation
          pip install pandas numpy matplotlib jinja2
          # Install optional dependencies if available
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi

      - name: Create backtest_results directory
        run: |
          mkdir -p backtest_results/charts

      - name: Generate backtest report
        env:
          ROLLING_WINDOW_DAYS: 60
          RISK_FREE_RATE: 0.02
        run: |
          python generate_backtest_report.py

      - name: Upload report artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backtest-report-${{ github.sha }}
          path: |
            backtest_results/report.md
            backtest_results/report.html
            backtest_results/metrics.json
            backtest_results/charts/
          if-no-files-found: ignore

      - name: Commit report to repository
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add backtest_results/
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update backtest report [skip ci]"
            git push
          fi